strip.text = element_text(face = "bold", size = rel(1.1), hjust = 0),
axis.title = element_text(face = "bold"),
axis.title.x = element_text(margin = margin(t=10), hjust = 0),
axis.title.y = element_text(margin = margin(r = 10), hjust = 1)) +
# Add a light grey background to the facet titles, with no borders
theme(strip.background = element_rect(fill = "grey90", color = NA),
# Add a thin grey border around all the plots to tie in the facet titles
panel.border = element_rect(color = "grey90", fill = NA))
base_plot + theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = rel(1.7)),
plot.subtitle = element_text(face= "plain", size = rel(1.3), color = "grey70"),
plot.caption = element_text(face = "italic", size = rel(0.7),
color = "grey70", hjust = 0),
legend.title = element_text(face = "bold"),
strip.text = element_text(face = "bold", size = rel(1.1), hjust = 0),
axis.title = element_text(face = "bold"),
axis.title.x = element_text(margin = margin(t=10), hjust = 0),
axis.title.y = element_text(margin = margin(r = 10), hjust = 1)) +
# Add a light grey background to the facet titles, with no borders
theme(strip.background = element_rect(fill = "grey90", color = NA),
# Add a thin grey border around all the plots to tie in the facet titles
panel.border = element_rect(color = "grey90", fill = NA))
my_theme <- theme_minimal(base_family = "Roboto Condensed", base_size = 12) +
theme(panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = rel(1.7)),
plot.subtitle = element_text(face= "plain", size = rel(1.3), color = "grey70"),
plot.caption = element_text(face = "italic", size = rel(0.7),
color = "grey70", hjust = 0),
legend.title = element_text(face = "bold"),
strip.text = element_text(face = "bold", size = rel(1.1), hjust = 0),
axis.title = element_text(face = "bold"),
axis.title.x = element_text(margin = margin(t=10), hjust = 0),
axis.title.y = element_text(margin = margin(r = 10), hjust = 1)) +
# Add a light grey background to the facet titles, with no borders
theme(strip.background = element_rect(fill = "grey90", color = NA),
# Add a thin grey border around all the plots to tie in the facet titles
panel.border = element_rect(color = "grey90", fill = NA))
ggplot(data = mpg,
mapping = aes(x = displ, y = hwy, color = class)) +
geom_point(size = 3) +
scale_color_viridis_d() +
facet_wrap(vars(drv)) +
labs(x = "Displacement", y = "Highway MPG", color = "Car class",
title = "Heavier cars get worse mileage",
subtitle = "Except two-seaters?",
caption = "Here's a caption") +
my_theme
install.packages("ggThemeAssist")
thePlot <- base_plot + my_theme
ggsave("thePlot.png", thePlot, width = 8, height = 5, units = "in")
ggsave("thePlot.pdf", thePlot, width = 8, height = 5, units = "in")
ggsave("thePlot.pdf", thePlot, width = 8, height = 5, units = "in", device = cairo_pdf)
library(tidyverse)
Canada <- read_csv(url("https://figshare.com/ndownloader/files/30990820"))
Canada <- read_csv(url("https://figshare.com/ndownloader/files/30990820"))
USA <- read_csv
humans <- read_csv(url("https://figshare.com/ndownloader/files/30993373"))
USA <- read_csv(url("https://figshare.com/ndownloader/files/25190510"))
head(Canada)
head(USA)
head(USA)
head(humans)
humans <- gather(humans, "year", 2:72)
humans <- gather(humans, "year", "population", 2:72)
humans$population <- humans$population * 1000
humans <- gather(humans, "year", "population", 2:72) %>%
as.numeric(population)
pop_num <- as.numeric(humans$population)
View(humans)
unique(humans$country)
humansCanUsa <- filter(humans, country == "Canada" | country == "United States of America")
humans$year <- as.numeric(humans$year)
humansCanUsa <- filter(humans, country == "Canada" | country == "United States of America") %>%
filter(humans, year >= 2005)
humansCanUsa <- filter(humans, country == "Canada" | country == "United States of America" & year >= 2005)
humansCanUsa <- filter(humans, country == "Canada" | country == "United States of America" & year >= 2005)
humansCanUsa <- filter(humansCanUsa, year >= 2005)
test <- (humansCanUsa$population, " ")
test <- (humansCanUsa$population, "")
pop_num <- str_replace(humansCanUsa$population, "")
pop_num <- str_replace(humansCanUsa$population, " ")
pop_num <- str_remove(humansCanUsa$population, " ")
humansCanUsa <- filter(humansCanUsa, year >= 2005) %>% str_remove(humansCanUsa$population, " ")
humansCanUsa$population <- str_remove(humansCanUsa$population, " ")
head(Canada)
Canada <- filter(Canada, month == 10 & year >= 2005)
Canada <- filter(Canada, month == 10 & year >= 2005) %>%
mutate(candysale = candy)
Canada <- read_csv(url("https://figshare.com/ndownloader/files/30990820"))
Canada <- filter(Canada, month == 10 & year >= 2005) %>%
rename(candysale = candy)
head(USA)
USA <- select(candy, year)
USA <- select("candy", "year")
USA <- select(USA, "candy", "year") %>%
rename(candysales = candy)
USA <- read_csv(url("https://figshare.com/ndownloader/files/25190510"))
USA <- select(USA, "year", "candy") %>%
rename(candysales = candy)
humansCanUsa$population <- humansCanUsa$population * 1000
humansCanUsa$population <- as.numeric(humansCanUsa$population)
humansCanUsa$population <- humansCanUsa$population *1000
USA$candysales <- USA$candysales * 1000000000
USA$candysales <- USA$candysales * 1000000000 * 1.26
Canada <- filter(Canada, month == 10 & year >= 2005) %>%
rename(candysale = candy) %>%
mutate(country = "Canada")
Canada <- read_csv(url("https://figshare.com/ndownloader/files/30990820"))
Canada <- filter(Canada, month == 10 & year >= 2005) %>%
rename(candysale = candy) %>%
mutate(country = "Canada")
USA <- mutate(country = "United States of America")
USA <- mutate(USA, country = "United States of America")
Canada <- mutate(Canada, -"month")
Canada <- select(Canada, -"month")
data <- bind_rows(Canada, USA)
USA <- read_csv(url("https://figshare.com/ndownloader/files/25190510"))
head(USA)
USA <- select(USA, "year", "candy") %>%
rename(candysale = candy)
USA$candysales <- USA$candysales * 1000000000 * 1.26
head(USA)
USA <- select(USA, "year", "candy") %>%
rename(candysale = candy)
USA <- read_csv(url("https://figshare.com/ndownloader/files/25190510"))
head(USA)
USA <- select(USA, "year", "candy") %>%
rename(candysale = candy)
USA$candysale <- USA$candysale * 1000000000 * 1.26
USA <- mutate(USA, country = "United States of America")
head(USA)
USA <- select(USA, "year", "candy") %>%
rename(candysale = candy)
data <- bind_rows(Canada, USA)
data <- left_join(data, humans)
data <- left_join(data, humansCanUsa)
head(Canada)
Canada <- filter(Canada, month == 10 & year >= 2005) %>%
rename(candysale = candy) %>%
mutate(country = "Canada")
library(tidyverse)
Canada <- read_csv(url("https://figshare.com/ndownloader/files/30990820"))
USA <- read_csv(url("https://figshare.com/ndownloader/files/25190510"))
humans <- read_csv(url("https://figshare.com/ndownloader/files/30993373"))
head(USA)
head(Canada)
Canada <- filter(Canada, month == 10 & year >= 2005) %>%
rename(candysale = candy) %>%
mutate(country = "Canada")
Canada <- select(Canada, -"month")
head(USA)
USA <- select(USA, "year", "candy") %>%
rename(candysale = candy)
USA$candysale <- USA$candysale * 1000000000 * 1.26
USA <- mutate(USA, country = "United States of America")
head(humans)
humans <- gather(humans, "year", "population", 2:72)
pop_num <- as.numeric(humans$population)
humans$year <- as.numeric(humans$year)
unique(humans$country)
humansCanUsa <- filter(humans, country == "Canada" | country == "United States of America" )
humansCanUsa <- filter(humansCanUsa, year >= 2005)
humansCanUsa$population <- str_remove(humansCanUsa$population, " ")
humansCanUsa$population <- as.numeric(humansCanUsa$population)
humansCanUsa$population <- humansCanUsa$population *1000
data <- bind_rows(Canada, USA)
data <- left_join(data, humansCanUsa)
ggplot(data, aes(year, candysale, color = country)) +
geom_point
ggplot(data, aes(year, candysale, color = country)) +
geom_point()
data$per_capita <- data$candysale/data$population
ggplot(data, aes(year, per_capita, color = country)) +
geom_point()
ggplot(data, aes(year, per_capita, color = country)) +
geom_point() +
geom_smooth()
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
setwd("~/GitHub/desert-fires-impact-biodiversity")
setwd("~/GitHub/desert-fires-impact-biodiversity")
library(tidyverse)
sites <- read_csv("/data/bronze.csv")
sites <- read_csv("data/bronze.csv")
sites <- read_csv("data/bronze.csv") %>%
select(c(fireID, firename, fireyear, firemonth, firesize, nobservations))
sites <- read_csv("data/bronze.csv") %>%
select(c(fireID, firename, fireyear, firemonth, firesize, n_observations)) %>%
rename(total_obs = n_observations)
write_csv(sites, "data/sites.csv")
sites <- read_csv("data/sites.csv")
observations <- read_csv("data/goldcounts.csv")
#add fire month to datafire
fmonth <- sites %>%
select(c("fireID", "firemonth"))
observations <- left_join(obsrvations, fmonth, by = "fireID")
observations <- left_join(observations, fmonth, by = "fireID")
#remove NA for individual counts
observations$indvdlC[is.na(datafire$indvdlC)] = 0
#remove NA for individual counts
observations$indvdlC[is.na(observations$indvdlC)] = 0
head(observations)
unique(observations$bssOfRc)
observations <- observations %>%
select(c(year, month, day, species, class, order, indvdlC, fireID))
write_csv(observations, "data/observations.csv")
observations <- read_csv("data/observations.csv")
observations <- read_csv("data/goldcounts.csv")
observations <- observations %>%
select(c(obsID, year, month, day, species, class, order, indvdlC, fireID))
write_csv(observations, "data/observations.")
write_csv(observations, "data/observations.csv")
observations <- read_csv("data/observations.csv")
data <- left_join(observations, sites, by = fireID)
data <- left_join(observations, sites, by = "fireID")
head(data)
data <- mutate(data, postingvalue = obsYear - fireyear,
pre_or_post = case_when(postingvalue > 0 ~ "post",
postingvalue < 0 ~ "pre",
postingvalue == 0 ~ "SY"),
n_years = abs(postingvalue))
observations <- rename(obsYear = observations$year)
observations <- observations %>%
rename(obsYear = year)
write_csv(observations, "data/observations.csv")
observations <- read_csv("data/observations.csv")
sites <- sites %>%
rename(fireYear = fireyear)
write_csv(sites, "data/sites.csv")
sites <- read_csv("data/sites.csv")
observations <- read_csv("data/observations.csv")
data <- left_join(observations, sites, by = "fireID")
head(data)
data <- mutate(data, postingvalue = obsYear - fireYear,
pre_or_post = case_when(postingvalue > 0 ~ "post",
postingvalue < 0 ~ "pre",
postingvalue == 0 ~ "SY"),
n_years = abs(postingvalue))
library(tidyverse)
sites <- read_csv("data/sites.csv")
observations <- read_csv("data/observations.csv")
data <- left_join(observations, sites, by = "fireID")
head(data)
data <- data %>%
mutate(postingvalue = obsYear - fireYear,
pre_or_post = case_when(postingvalue > 0 ~ "post",
postingvalue < 0 ~ "pre",
postingvalue == 0 ~ "SY"),
n_years = abs(postingvalue)) %>%
filter(postingvalue == 0) %>% #find pre- post- for observations in the same year and replace SY in datafire with pre or post
mutate(postingmonth = month - firemonth,
pre_or_post = case_when(postingmonth >0 ~ "post",
postingmonth < 0 ~ "pre",
postingvalue == 0 ~ "SM"))
library(tidyverse)
sites <- read_csv("data/sites.csv")
observations <- read_csv("data/observations.csv")
data <- left_join(observations, sites, by = "fireID")
head(data)
data <- data %>%
mutate(postingvalue = obsYear - fireYear,
pre_or_post = case_when(postingvalue > 0 ~ "post",
postingvalue < 0 ~ "pre",
postingvalue == 0 ~ "SY"),
n_years = abs(postingvalue))
View(data)
View(data)
#find pre- post- for observations in the same year and replace SY in datafire with pre or post
SY <- filter(data, postingvalue == 0) %>%
mutate(postingmonth = month - firemonth,
pre_or_post = case_when(postingmonth >0 ~ "post",
postingmonth < 0 ~ "pre",
postingvalue == 0 ~ "SM"))
data$pre_or_post <- ifelse(data$pre_or_post == "SY", SY$pre_or_post, data$pre_or_post)
data$pre_or_post
unique(data$pre_or_post)
ggplot(data, aes(pre_or_post)) +
geom_bar
ggplot(data, aes(pre_or_post)) +
geom_bar()
ggplot(data, aes(pre_or_post, total_obs))
ggplot(data, aes(pre_or_post, total_obs)) +
geom_bar
ggplot(data, aes(pre_or_post, total_obs)) +
geom_bar()
ggplot(data, aes(pre_or_post, total_obs)) +
geom_bar()
ggplot(data, aes(pre_or_post, total_obs)) +
geom_point()
ggplot(data, aes(pre_or_post, total_obs)) +
geom_jitter()
ggplot(data, aes(pre_or_post, total_obs)) +
geom_violin()
ggplot(data, aes(fireID, pre_or_post)) +
geom_point()
ggplot(data, aes(fireID, pre_or_post)) +
geom_point() +
geom_jitter()
ggplot(data, aes(firesize)) +
geom_bar()
ggplot(data, aes(firesize)) +
geom_point()
ggplot(data, aes(firename)) +
geom_bar() +
facet_grid()
ggplot(data, aes(firename)) +
geom_bar() +
facet_grid(var(pre_or_post))
ggplot(data, aes(firename)) +
geom_bar() +
facet_wrap(var(pre_or_post))
count(data, species, wt = indvdlC)
count(data, species)
group_by(data, species & pre_or_post)
group_by(data, species, pre_or_post)
group_by(data, species, pre_or_post) %>%
count(species)
sp_pre_post <- group_by(data, species, pre_or_post) %>%
count(species)
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col() +
facet_wrap(var(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(reorder(x)) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (reorder(pre_or_post), n)) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (reorder(pre_or_post), n)) +
ggplot(sp_pre_post, aes (reorder(pre_or_post), n)) +
geom_col() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (reorder(pre_or_post), n)) +
geom_col() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (x = reorder(pre_or_post), n)) +
geom_col() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post (name,
levels = rev(levels(factor(name)))), n)) +
geom_col() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col() +
scale_x_reverse() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (reorder(pre_or_post), n)) +
geom_col() +
scale_x_reverse() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (reorder(pre_or_post), n)) +
geom_col() +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(stat = "identity") +
facet_wrap(vars(species))
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col() +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
View(observations)
View(sp_pre_post)
observations <- read_csv("data/observations.csv") %>%
select(-species = "Canis familiaris")
observations <- read_csv("data/observations.csv") %>%
select(-species == "Canis familiaris")
observations <- read_csv("data/observations.csv") %>%
filter(-species == "Canis familiaris")
observations <- read_csv("data/observations.csv") %>%
filter(species != "Canis familiaris")
data <- left_join(observations, sites, by = "fireID")
head(data)
data <- data %>%
mutate(postingvalue = obsYear - fireYear,
pre_or_post = case_when(postingvalue > 0 ~ "post",
postingvalue < 0 ~ "pre",
postingvalue == 0 ~ "SY"),
n_years = abs(postingvalue))
#find pre- post- for observations in the same year and replace SY in datafire with pre or post
SY <- filter(data, postingvalue == 0) %>%
mutate(postingmonth = month - firemonth,
pre_or_post = case_when(postingmonth >0 ~ "post",
postingmonth < 0 ~ "pre",
postingvalue == 0 ~ "SM"))
data$pre_or_post <- ifelse(data$pre_or_post == "SY", SY$pre_or_post, data$pre_or_post)
unique(data$pre_or_post) #check if any SM (same month); would need to further categorize
count(data, species, wt = indvdlC)
count(data, species)
sp_pre_post <- group_by(data, species, pre_or_post) %>%
count(species)
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col() +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
write_csv(observations, "data/observations.csv")
observations <- read_csv("data/observations.csv") %>%
filter(species == "Canis familiaris")
observations <- read_csv("data/observations.csv")
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col() +
scale_fill_manual(values = c("gray50", "firebrick3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(fil = c("gray50", "firebrick3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(fill = c("gray50", "firebrick3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(fill = pre_or_post) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
geom_col(aes(fill = pre_or_post) +
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_file_manual(value = c("gray50", "firebrickred3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(value = c("gray50", "firebrickred3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n, fill = pre_or_post)) +
geom_col() +
scale_fill_manual(value = c("gray50", "firebrickred3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("gray50", "firebrickred3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("gray50", "firebrick3")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("firebrick3", "gray50")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
count(data, species, wt = indvdlC)
sp_pre_post_weighted <- group_by(data, species, pre_or_post) %>%
count(species, wt = indvdlC)
ggplot(sp_pre_post_weighted, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("firebrick3", "gray50")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
View(sp_pre_post_weighted)
View(sp_pre_post_weighted)
data %>%
filter(species = "Agelaius tricolor") %>%
sum(indvdlC)
data %>%
filter(species == "Agelaius tricolor") %>%
sum(indvdlC)
View(data)
data %>%
filter(species == "Agelaius tricolor")
data %>%
filter(species == "Agelaius tricolor") %>%
group_by(pre_or_post) %>%
summarize(indvdlC)
data %>%
filter(species == "Agelaius tricolor") %>%
group_by(pre_or_post) %>%
summarize(total= sum(indvdlC))
layers <-  geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("firebrick3", "gray50")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
layers <- geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("firebrick3", "gray50")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
ggplot(sp_pre_post_wt_minusAt, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("firebrick3", "gray50")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
sp_pre_post_wt_minusAt <- group_by(data, species, pre_or_post) %>%
count(species, wt = indvdlC) %>%
filter(species != "Agelaius tricolor")
ggplot(sp_pre_post_wt_minusAt, aes (pre_or_post, n)) +
geom_col(aes(fill = pre_or_post)) +
scale_fill_manual(values = c("firebrick3", "gray50")) +
scale_x_discrete(limits = c("pre", "post")) +
facet_wrap(vars(species))
library(skimr)
skimr(data)
library(skimr)
skimr(data)
skim(data)
skim(data)
